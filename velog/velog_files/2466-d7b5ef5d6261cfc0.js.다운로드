(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2466],{77458:function(n,e,t){"use strict";t.d(e,{V:function(){return r}});var i=t(47050);let u=t(32608).env.DOCKER_ENV||"development",o=["stage","production"].includes(u)?"production":"development",r=i.z.object({dockerEnv:i.z.enum(["development","production","stage"]),appEnv:i.z.enum(["development","production"]),publicUrl:i.z.string(),clientHost:i.z.string(),clientV2Host:i.z.string(),apiV2Host:i.z.string(),apiV3Host:i.z.string(),graphqlServerHost:i.z.string(),graphqlServerHostNoCDN:i.z.string(),graphqlBookServerHost:i.z.string(),defaultPostLimit:i.z.number().default(20),gaMeasurementId:i.z.string()}).parse({dockerEnv:u,appEnv:o,publicUrl:"/",clientHost:"https://velog.io",clientV2Host:"https://velog.io",apiV2Host:"https://v2.velog.io",apiV3Host:"https://v3.velog.io",graphqlServerHost:"https://v3.velog.io",graphqlServerHostNoCDN:"https://v3.velog.io",graphqlBookServerHost:"http://localhost:5005",gaMeasurementId:"G-8D0MD2S4PK"})},37949:function(n,e,t){"use strict";t.d(e,{$n:function(){return x},A1:function(){return y},Ax:function(){return M},Dn:function(){return H},Dx:function(){return _},F3:function(){return f},G8:function(){return nc},Gz:function(){return nN},HR:function(){return no},IO:function(){return Q},KL:function(){return Z},O:function(){return P},Ph:function(){return k},TG:function(){return n_},WM:function(){return ne},Z0:function(){return ni},ZL:function(){return nq},_y:function(){return nk},bF:function(){return U},cw:function(){return $},d4:function(){return c},de:function(){return nw},el:function(){return ng},en:function(){return D},fX:function(){return nl},gg:function(){return nf},gm:function(){return nv},ir:function(){return n$},kE:function(){return h},om:function(){return ns},rk:function(){return J},tX:function(){return N},ws:function(){return V},zu:function(){return v}});var i=t(94468),u=(t(24036),t(32982)),o=t(30955);let r="\n    query ads($input: AdsInput!) {\n  ads(input: $input) {\n    id\n    title\n    body\n    image\n    url\n    start_date\n  }\n}\n    ",s=(n,e)=>(0,i.useQuery)({queryKey:["ads",n],queryFn:(0,o._)(r,n),...e});s.getKey=n=>["ads",n],s.fetcher=(n,e)=>(0,o._)(r,n,e);let a="\n    query isLogged {\n  isLogged\n}\n    ",l=(n,e)=>(0,i.useQuery)({queryKey:void 0===n?["isLogged"]:["isLogged",n],queryFn:(0,o._)(a,n),...e});l.getKey=n=>void 0===n?["isLogged"]:["isLogged",n],l.fetcher=(n,e)=>(0,o._)(a,n,e);let p="\n    mutation sendMail($input: SendMailInput!) {\n  sendMail(input: $input) {\n    registered\n  }\n}\n    ",c=n=>(0,u.useMutation)({mutationKey:["sendMail"],mutationFn:n=>(0,o._)(p,n)(),...n});c.getKey=()=>["sendMail"],c.fetcher=(n,e)=>(0,o._)(p,n,e);let d="\n    mutation follow($input: FollowInput!) {\n  follow(input: $input)\n}\n    ",_=n=>(0,u.useMutation)({mutationKey:["follow"],mutationFn:n=>(0,o._)(d,n)(),...n});_.getKey=()=>["follow"],_.fetcher=(n,e)=>(0,o._)(d,n,e);let m="\n    mutation unfollow($input: UnfollowInput!) {\n  unfollow(input: $input)\n}\n    ",f=n=>(0,u.useMutation)({mutationKey:["unfollow"],mutationFn:n=>(0,o._)(m,n)(),...n});f.getKey=()=>["unfollow"],f.fetcher=(n,e)=>(0,o._)(m,n,e);let y="\n    query getFollowers($input: GetFollowInput!) {\n  followers(input: $input) {\n    id\n    userId\n    username\n    profile {\n      short_bio\n      thumbnail\n      display_name\n    }\n    is_followed\n  }\n}\n    ",g=(n,e)=>(0,i.useQuery)({queryKey:["getFollowers",n],queryFn:(0,o._)(y,n),...e});g.getKey=n=>["getFollowers",n],g.fetcher=(n,e)=>(0,o._)(y,n,e);let h="\n    query getFollowings($input: GetFollowInput!) {\n  followings(input: $input) {\n    id\n    userId\n    username\n    profile {\n      short_bio\n      thumbnail\n      display_name\n    }\n    is_followed\n  }\n}\n    ",q=(n,e)=>(0,i.useQuery)({queryKey:["getFollowings",n],queryFn:(0,o._)(h,n),...e});q.getKey=n=>["getFollowings",n],q.fetcher=(n,e)=>(0,o._)(h,n,e);let K="\n    query notification($input: NotificationsInput!) {\n  notifications(input: $input) {\n    id\n    type\n    action\n    actor_id\n    action_id\n    is_read\n    created_at\n  }\n}\n    ",v=(n,e)=>(0,i.useQuery)({queryKey:["notification",n],queryFn:(0,o._)(K,n),...e});v.getKey=n=>["notification",n],v.fetcher=(n,e)=>(0,o._)(K,n,e);let b="\n    query notNoticeNotificationCount {\n  notNoticeNotificationCount\n}\n    ",$=(n,e)=>(0,i.useQuery)({queryKey:void 0===n?["notNoticeNotificationCount"]:["notNoticeNotificationCount",n],queryFn:(0,o._)(b,n),...e});$.getKey=n=>void 0===n?["notNoticeNotificationCount"]:["notNoticeNotificationCount",n],$.fetcher=(n,e)=>(0,o._)(b,n,e);let F="\n    mutation readAllNotifications {\n  readAllNotifications\n}\n    ",N=n=>(0,u.useMutation)({mutationKey:["readAllNotifications"],mutationFn:n=>(0,o._)(F,n)(),...n});N.getKey=()=>["readAllNotifications"],N.fetcher=(n,e)=>(0,o._)(F,n,e);let I="\n    mutation removeAllNotifications {\n  removeAllNotifications\n}\n    ",k=n=>(0,u.useMutation)({mutationKey:["removeAllNotifications"],mutationFn:n=>(0,o._)(I,n)(),...n});k.getKey=()=>["removeAllNotifications"],k.fetcher=(n,e)=>(0,o._)(I,n,e);let w="\n    mutation readNotication($input: ReadNotificationInput!) {\n  readNotification(input: $input)\n}\n    ",P=n=>(0,u.useMutation)({mutationKey:["readNotication"],mutationFn:n=>(0,o._)(w,n)(),...n});P.getKey=()=>["readNotication"],P.fetcher=(n,e)=>(0,o._)(w,n,e);let E="\n    mutation updateNotNoticeNotification {\n  updateNotNoticeNotification\n}\n    ",U=n=>(0,u.useMutation)({mutationKey:["updateNotNoticeNotification"],mutationFn:n=>(0,o._)(E,n)(),...n});U.getKey=()=>["updateNotNoticeNotification"],U.fetcher=(n,e)=>(0,o._)(E,n,e);let C="\n    query readPost($input: ReadPostInput!) {\n  post(input: $input) {\n    id\n    title\n    released_at\n    updated_at\n    body\n    short_description\n    is_markdown\n    is_private\n    is_temp\n    thumbnail\n    comments_count\n    url_slug\n    likes\n    is_liked\n    is_followed\n    user {\n      id\n      username\n      profile {\n        id\n        display_name\n        thumbnail\n        short_bio\n        profile_links\n      }\n      velog_config {\n        title\n      }\n    }\n    comments {\n      id\n      user {\n        id\n        username\n        profile {\n          id\n          thumbnail\n        }\n      }\n      text\n      replies_count\n      level\n      created_at\n      level\n      deleted\n    }\n    series {\n      id\n      name\n      url_slug\n      series_posts {\n        id\n        post {\n          id\n          title\n          url_slug\n          user {\n            id\n            username\n          }\n        }\n      }\n    }\n    linked_posts {\n      previous {\n        id\n        title\n        url_slug\n        user {\n          id\n          username\n        }\n      }\n      next {\n        id\n        title\n        url_slug\n        user {\n          id\n          username\n        }\n      }\n    }\n  }\n}\n    ",T=(n,e)=>(0,i.useQuery)({queryKey:["readPost",n],queryFn:(0,o._)(C,n),...e});T.getKey=n=>["readPost",n],T.fetcher=(n,e)=>(0,o._)(C,n,e);let M="\n    query recentPosts($input: RecentPostsInput!) {\n  recentPosts(input: $input) {\n    id\n    title\n    short_description\n    thumbnail\n    user {\n      id\n      username\n      profile {\n        id\n        thumbnail\n        display_name\n      }\n    }\n    url_slug\n    released_at\n    updated_at\n    is_private\n    likes\n    comments_count\n  }\n}\n    ",S=(n,e)=>(0,i.useQuery)({queryKey:["recentPosts",n],queryFn:(0,o._)(M,n),...e});S.getKey=n=>["recentPosts",n],S.fetcher=(n,e)=>(0,o._)(M,n,e);let Q="\n    query trendingPosts($input: TrendingPostsInput!) {\n  trendingPosts(input: $input) {\n    id\n    title\n    short_description\n    thumbnail\n    likes\n    user {\n      id\n      username\n      profile {\n        id\n        thumbnail\n        display_name\n      }\n    }\n    url_slug\n    released_at\n    updated_at\n    is_private\n    comments_count\n  }\n}\n    ",A=(n,e)=>(0,i.useQuery)({queryKey:["trendingPosts",n],queryFn:(0,o._)(Q,n),...e});A.getKey=n=>["trendingPosts",n],A.fetcher=(n,e)=>(0,o._)(Q,n,e);let H="\n    query feedPosts($input: FeedPostsInput!) {\n  feedPosts(input: $input) {\n    id\n    title\n    short_description\n    thumbnail\n    likes\n    user {\n      id\n      username\n      profile {\n        id\n        thumbnail\n        display_name\n      }\n    }\n    url_slug\n    released_at\n    updated_at\n    is_private\n    comments_count\n  }\n}\n    ",G=(n,e)=>(0,i.useQuery)({queryKey:["feedPosts",n],queryFn:(0,o._)(H,n),...e});G.getKey=n=>["feedPosts",n],G.fetcher=(n,e)=>(0,o._)(H,n,e);let x="\n    query velogPosts($input: GetPostsInput!) {\n  posts(input: $input) {\n    id\n    title\n    short_description\n    thumbnail\n    user {\n      id\n      username\n      profile {\n        id\n        thumbnail\n        display_name\n      }\n    }\n    url_slug\n    released_at\n    updated_at\n    comments_count\n    tags\n    is_private\n    likes\n  }\n}\n    ",R=(n,e)=>(0,i.useQuery)({queryKey:["velogPosts",n],queryFn:(0,o._)(x,n),...e});R.getKey=n=>["velogPosts",n],R.fetcher=(n,e)=>(0,o._)(x,n,e);let V="\n    query searchPosts($input: GetSearchPostsInput!) {\n  searchPosts(input: $input) {\n    count\n    posts {\n      id\n      title\n      short_description\n      thumbnail\n      user {\n        id\n        username\n        profile {\n          id\n          thumbnail\n          display_name\n        }\n      }\n      url_slug\n      released_at\n      tags\n      is_private\n      comments_count\n    }\n  }\n}\n    ",z=(n,e)=>(0,i.useQuery)({queryKey:["searchPosts",n],queryFn:(0,o._)(V,n),...e});z.getKey=n=>["searchPosts",n],z.fetcher=(n,e)=>(0,o._)(V,n,e);let O="\n    query userTags($input: UserTagsInput!) {\n  userTags(input: $input) {\n    tags {\n      id\n      name\n      description\n      posts_count\n      thumbnail\n    }\n    posts_count\n  }\n}\n    ",L=(n,e)=>(0,i.useQuery)({queryKey:["userTags",n],queryFn:(0,o._)(O,n),...e});L.getKey=n=>["userTags",n],L.fetcher=(n,e)=>(0,o._)(O,n,e);let j="\n    query getUser($input: GetUserInput!) {\n  user(input: $input) {\n    id\n    username\n    profile {\n      id\n      display_name\n      short_bio\n      thumbnail\n      profile_links\n    }\n  }\n}\n    ",B=(n,e)=>(0,i.useQuery)({queryKey:["getUser",n],queryFn:(0,o._)(j,n),...e});B.getKey=n=>["getUser",n],B.fetcher=(n,e)=>(0,o._)(j,n,e);let W="\n    query getUserFollowInfo($input: GetUserInput!) {\n  user(input: $input) {\n    id\n    username\n    profile {\n      id\n      display_name\n      short_bio\n      thumbnail\n      profile_links\n    }\n    followers_count\n    followings_count\n    is_followed\n  }\n}\n    ",D=(n,e)=>(0,i.useQuery)({queryKey:["getUserFollowInfo",n],queryFn:(0,o._)(W,n),...e});D.getKey=n=>["getUserFollowInfo",n],D.fetcher=(n,e)=>(0,o._)(W,n,e);let X="\n    query currentUser {\n  currentUser {\n    id\n    username\n    email\n    profile {\n      id\n      thumbnail\n      display_name\n      short_bio\n      profile_links\n    }\n    user_meta {\n      id\n      email_notification\n      email_promotion\n    }\n  }\n}\n    ",J=(n,e)=>(0,i.useQuery)({queryKey:void 0===n?["currentUser"]:["currentUser",n],queryFn:(0,o._)(X,n),...e});J.getKey=n=>void 0===n?["currentUser"]:["currentUser",n],J.fetcher=(n,e)=>(0,o._)(X,n,e);let Y="\n    query velogConfig($input: GetVelogConfigInput!) {\n  velogConfig(input: $input) {\n    title\n    logo_image\n  }\n}\n    ",Z=(n,e)=>(0,i.useQuery)({queryKey:["velogConfig",n],queryFn:(0,o._)(Y,n),...e});Z.getKey=n=>["velogConfig",n],Z.fetcher=(n,e)=>(0,o._)(Y,n,e);let nn="\n    query getUserAbout($input: GetUserInput!) {\n  user(input: $input) {\n    id\n    profile {\n      id\n      about\n      display_name\n    }\n  }\n}\n    ",ne=(n,e)=>(0,i.useQuery)({queryKey:["getUserAbout",n],queryFn:(0,o._)(nn,n),...e});ne.getKey=n=>["getUserAbout",n],ne.fetcher=(n,e)=>(0,o._)(nn,n,e);let nt="\n    query getUserSeriesList($input: GetUserInput!) {\n  user(input: $input) {\n    id\n    series_list {\n      id\n      name\n      description\n      url_slug\n      thumbnail\n      updated_at\n      posts_count\n    }\n  }\n}\n    ",ni=(n,e)=>(0,i.useQuery)({queryKey:["getUserSeriesList",n],queryFn:(0,o._)(nt,n),...e});ni.getKey=n=>["getUserSeriesList",n],ni.fetcher=(n,e)=>(0,o._)(nt,n,e);let nu="\n    query unregisterToken {\n  unregisterToken\n}\n    ",no=(n,e)=>(0,i.useQuery)({queryKey:void 0===n?["unregisterToken"]:["unregisterToken",n],queryFn:(0,o._)(nu,n),...e});no.getKey=n=>void 0===n?["unregisterToken"]:["unregisterToken",n],no.fetcher=(n,e)=>(0,o._)(nu,n,e);let nr="\n    query checkEmailExists($input: CheckEmailExistsInput!) {\n  checkEmailExists(input: $input)\n}\n    ",ns=(n,e)=>(0,i.useQuery)({queryKey:["checkEmailExists",n],queryFn:(0,o._)(nr,n),...e});ns.getKey=n=>["checkEmailExists",n],ns.fetcher=(n,e)=>(0,o._)(nr,n,e);let na="\n    mutation updateAbout($input: UpdateAboutInput!) {\n  updateAbout(input: $input) {\n    id\n    about\n  }\n}\n    ",nl=n=>(0,u.useMutation)({mutationKey:["updateAbout"],mutationFn:n=>(0,o._)(na,n)(),...n});nl.getKey=()=>["updateAbout"],nl.fetcher=(n,e)=>(0,o._)(na,n,e);let np="\n    mutation updateThumbnail($input: UpdateThumbnailInput!) {\n  updateThumbnail(input: $input) {\n    id\n    thumbnail\n  }\n}\n    ",nc=n=>(0,u.useMutation)({mutationKey:["updateThumbnail"],mutationFn:n=>(0,o._)(np,n)(),...n});nc.getKey=()=>["updateThumbnail"],nc.fetcher=(n,e)=>(0,o._)(np,n,e);let nd="\n    mutation updateProfile($input: UpdateProfileInput!) {\n  updateProfile(input: $input) {\n    id\n    display_name\n    short_bio\n  }\n}\n    ",n_=n=>(0,u.useMutation)({mutationKey:["updateProfile"],mutationFn:n=>(0,o._)(nd,n)(),...n});n_.getKey=()=>["updateProfile"],n_.fetcher=(n,e)=>(0,o._)(nd,n,e);let nm="\n    mutation updateVelogTitle($input: UpdateVelogTitleInput!) {\n  updateVelogTitle(input: $input) {\n    id\n    title\n  }\n}\n    ",nf=n=>(0,u.useMutation)({mutationKey:["updateVelogTitle"],mutationFn:n=>(0,o._)(nm,n)(),...n});nf.getKey=()=>["updateVelogTitle"],nf.fetcher=(n,e)=>(0,o._)(nm,n,e);let ny="\n    mutation updateSocialInfo($input: UpdateSocialInfoInput!) {\n  updateSocialInfo(input: $input) {\n    id\n    profile_links\n  }\n}\n    ",ng=n=>(0,u.useMutation)({mutationKey:["updateSocialInfo"],mutationFn:n=>(0,o._)(ny,n)(),...n});ng.getKey=()=>["updateSocialInfo"],ng.fetcher=(n,e)=>(0,o._)(ny,n,e);let nh="\n    mutation updateEmailRules($input: UpdateEmailRulesInput!) {\n  updateEmailRules(input: $input) {\n    email_notification\n    email_promotion\n  }\n}\n    ",nq=n=>(0,u.useMutation)({mutationKey:["updateEmailRules"],mutationFn:n=>(0,o._)(nh,n)(),...n});nq.getKey=()=>["updateEmailRules"],nq.fetcher=(n,e)=>(0,o._)(nh,n,e);let nK="\n    mutation unregister($input: UnregisterInput!) {\n  unregister(input: $input)\n}\n    ",nv=n=>(0,u.useMutation)({mutationKey:["unregister"],mutationFn:n=>(0,o._)(nK,n)(),...n});nv.getKey=()=>["unregister"],nv.fetcher=(n,e)=>(0,o._)(nK,n,e);let nb="\n    mutation initiateChangeEmail($input: InitiateChangeEmailInput!) {\n  initiateChangeEmail(input: $input)\n}\n    ",n$=n=>(0,u.useMutation)({mutationKey:["initiateChangeEmail"],mutationFn:n=>(0,o._)(nb,n)(),...n});n$.getKey=()=>["initiateChangeEmail"],n$.fetcher=(n,e)=>(0,o._)(nb,n,e);let nF="\n    mutation confirmChangeEmail($input: ConfirmChangeEmailInput!) {\n  confirmChangeEmail(input: $input)\n}\n    ",nN=n=>(0,u.useMutation)({mutationKey:["confirmChangeEmail"],mutationFn:n=>(0,o._)(nF,n)(),...n});nN.getKey=()=>["confirmChangeEmail"],nN.fetcher=(n,e)=>(0,o._)(nF,n,e);let nI="\n    mutation logout {\n  logout\n}\n    ",nk=n=>(0,u.useMutation)({mutationKey:["logout"],mutationFn:n=>(0,o._)(nI,n)(),...n});nk.getKey=()=>["logout"],nk.fetcher=(n,e)=>(0,o._)(nI,n,e);let nw="\n    query trendingWriters($input: TrendingWritersInput!) {\n  trendingWriters(input: $input) {\n    index\n    id\n    user {\n      id\n      username\n      profile {\n        display_name\n        thumbnail\n      }\n    }\n    posts {\n      title\n      url_slug\n    }\n  }\n}\n    ",nP=(n,e)=>(0,i.useQuery)({queryKey:["trendingWriters",n],queryFn:(0,o._)(nw,n),...e});nP.getKey=n=>["trendingWriters",n],nP.fetcher=(n,e)=>(0,o._)(nw,n,e)},30955:function(n,e,t){"use strict";t.d(e,{_:function(){return o}});var i=t(77458);async function u(n){let{url:e="".concat(i.V.graphqlServerHost,"/graphql"),method:t="POST",body:u,headers:o={},next:r,cache:s,...a}=n,l=e;if("GET"===t&&u){let n=function(n){if(!n.query)throw Error("The query field is required!");let e=encodeURIComponent(n.query),t=n.operationName?"operationName=".concat(encodeURIComponent(n.operationName),"&"):"",i=(null==n?void 0:n.variables)?"&variables=".concat(encodeURIComponent(JSON.stringify(n.variables))):"";return"".concat(t,"query=").concat(e).concat(i)}(u);l="".concat(e,"?").concat(n)}let p=new Headers({"Content-Type":"application/json",...o}),c=await fetch(l,{method:t,body:"POST"===t.toUpperCase()?JSON.stringify(u):void 0,headers:p,credentials:"include",next:r,cache:s,...a});if(!c.ok){let n=await c.json();throw!["userTags","velogConfig"].includes((null==u?void 0:u.operationName)||"")&&[404].includes(c.status)&&(console.log("graphqlFetch errors",n),console.log("body",u)),Error({operationName:null==u?void 0:u.operationName,status:c.status,statusText:c.statusText})}return(await c.json()).data}function o(n,e,t){return async()=>await u({url:"".concat(i.V.graphqlServerHost,"/graphql"),method:"POST",body:{query:n,variables:null!=e?e:{}},headers:{...t}})}},47508:function(n,e,t){"use strict";t.d(e,{x:function(){return d}});var i=t(50807),u=t.n(i),o=t(20096),r=t.n(o),s=t(90520),a=t.n(s),l=t(83579),p=t.n(l);let c=n=>Object.keys(n).length;function d(n){let e={...u(),...r(),...a(),...p()},t={...e,...n};if(c(e)+c(n)!==c(t))throw Error("Detected duplicate keys while merging styles.      Ensure unique class names across all style modules.");return function(){for(var n=arguments.length,e=Array(n),i=0;i<n;i++)e[i]=arguments[i];return e.filter(n=>n).map(n=>{var e;return"object"==typeof n?Object.keys(n).filter(e=>n[e]).map(n=>t[n]||n).join(" "):null!==(e=t[n])&&void 0!==e?e:n}).join(" ")}}},83579:function(n){n.exports={homeGrid:"grid_homeGrid__jtBab",trendingWriterGrid:"grid_trendingWriterGrid__5iC9b"}},20096:function(n){n.exports={fadeIn:"keyframes_fadeIn__9Emp7","fade-in":"keyframes_fade-in__WlXgC",fadeOut:"keyframes_fadeOut__37rwa","fade-out":"keyframes_fade-out__s6jKT",popInFromBottom:"keyframes_popInFromBottom__GHx42","pop-in-from-bottom":"keyframes_pop-in-from-bottom__OB5io",popOutToBottom:"keyframes_popOutToBottom__hT7IA","pop-out-to-Bottom":"keyframes_pop-out-to-Bottom__Qk1C0",shining:"keyframes_shining__7r5k7"}},90520:function(n){n.exports={mainResponsive:"responsive_mainResponsive___uG64",mainHeaderResponsive:"responsive_mainHeaderResponsive__S6XhY"}},50807:function(n){n.exports={hstack:"utils_hstack__WIiJ0",vstack:"utils_vstack__LNUuQ",ellipsis:"utils_ellipsis__M_m5g",hide:"utils_hide__xNcYk",center:"utils_center__uvg03"}}}]);